from collections import Counter

class Solution:
    def minWindow(self, s, t):
        if not s or not t:
            return ""
        
        t_count = Counter(t)
        required = len(t_count)
        left, right = 0, 0
        formed = 0
        window_counts = {}
        ans = float("inf"), None, None
        
        while right < len(s):
            char = s[right]
            window_counts[char] = window_counts.get(char, 0) + 1
            
            if char in t_count and window_counts[char] == t_count[char]:
                formed += 1
            
            while left <= right and formed == required:
                if right - left + 1 < ans[0]:
                    ans = (right - left + 1, left, right)
                
                window_counts[s[left]] -= 1
                if s[left] in t_count and window_counts[s[left]] < t_count[s[left]]:
                    formed -= 1
                left += 1
            
            right += 1
        
        return "" if ans[0] == float("inf") else s[ans[1]: ans[2] + 1]
